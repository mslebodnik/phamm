# acl specific for phamm

#  Copyright (c) 2005 Alessandro De Zorzi, Mirko Grava
#  				<phamm@rhx.it> http://phamm.rhx.it/
#
#  Permission is granted to copy, distribute and/or modify this document
#  under the terms of the GNU Free Documentation License, Version 1.2
#  or any later version published by the Free Software Foundation;
#  A copy of the license in DOCS.LICENSE file.
#
# account must edit his password, spam level, forward, vacation, his name
# postmaster with editAccounts=FALSE do the same thing for his domain
# postmaster with editAccounts=TRUE can add account/alias and edit also amavisBypassVirusChecks, quota and smtpAuth
# vadmin could do the same as postmaster with editAccounts=TRUE for some domains
# IMPORTANT
# this file was tested to be used on Debian Lenny with slapd 2.4.7-5
# Please remember that the rootdn is cn=admin,dc=example,dc=tld
#

access to dn.regex=".+,vd=([^,]+),o=hosting,dc=example,dc=tld$"  attrs=userPassword
		by dn.base="cn=admin,dc=example,dc=tld" write
		by self write
		by anonymous auth
		by set.expand="[cn=admins,ou=groups,vd=$1,o=hosting,dc=example,dc=tld]/member* & user " write

access to dn.regex=".+,vd=([^,]+),o=hosting,dc=example,dc=tld$"  attrs=amavisBypassVirusChecks,quota,smtpAuth
		by dn.base="cn=admin,dc=example,dc=tld" write
		by self read
		by dn.base="cn=phamm,o=hosting,dc=example,dc=tld" read
		by set.expand="[cn=admins,ou=groups,vd=$1,o=hosting,dc=example,dc=tld]/member* & user " read

access to dn.regex=".+,vd=([^,]+),o=hosting,dc=example,dc=tld$"  attrs=cn,sn,uid,forwardActive,vacationActive,vacationInfo,vacationStart,vacationEnd,vacationForward,amavisSpamTagLevel,amavisSpamTag2Level,amavisSpamKillLevel
		by dn.base="cn=admin,dc=example,dc=tld" write
		by self write
		by dn.base="cn=phamm,o=hosting,dc=example,dc=tld" read
		by set.expand="[cn=admins,ou=groups,vd=$1,o=hosting,dc=example,dc=tld]/member* & user " write

access to dn.regex=".+,vd=([^,]+),o=hosting,dc=example,dc=tld$"  attrs=amavisBypassSpamChecks,delete,createMaildir,vdHome,mailbox,otherTransport,accountActive
		by dn.base="cn=admin,dc=example,dc=tld" write
		by self read
		by dn.base="cn=phamm,o=hosting,dc=example,dc=tld" read
		by set.expand="[cn=admins,ou=groups,vd=$1,o=hosting,dc=example,dc=tld]/member* & user " write

access to dn.subtree="o=hosting,dc=example,dc=tld$"
		by dn.base="cn=admin,dc=example,dc=tld" write
		by self write
		by dn.base="cn=phamm,o=hosting,dc=example,dc=tld" read
		by anonymous auth

access to dn.regex=".+,dc=tld$"
        by dn="cn=admin,dc=example,dc=tld" write
        by dn.exact="cn=phamm,o=hosting,dc=example,dc=tld" read
        by anonymous auth

access to dn.regex=".+,ou=admin,dc=example,dc=tld$" attrs=userPassword
	by dn="cn=admin,dc=example,dc=tld" write
        by self write
        by anonymous auth

access to dn.regex=".+,ou=admin,dc=example,dc=tld$" attrs=vd
	by dn="cn=admin,dc=example,dc=tld" write
        by self read

access to dn.regex="ou=admin,dc=example,dc=tld$"
	by dn="cn=admin,dc=example,dc=tld" write
        by self read

